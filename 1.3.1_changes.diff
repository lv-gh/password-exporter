--- old/chrome/content/pwdex-global.js	2023-07-01 01:37:45.478631800 +0300
+++ new/chrome/content/pwdex-global.js	2023-06-30 13:59:42.315672200 +0300
@@ -13,6 +13,32 @@
  */
 var CC_loginManager = Components.classes["@mozilla.org/login-manager;1"];
 
+var strBundleService = null;
+
+function srGetStrBundle(path)
+{
+  var strBundle = null;
+
+  if (!strBundleService) {
+      try {
+          strBundleService =
+              Components.classes["@mozilla.org/intl/stringbundle;1"].getService();
+          strBundleService =
+              strBundleService.QueryInterface(Components.interfaces.nsIStringBundleService);
+      } catch (ex) {
+          dump("\n--** strBundleService failed: " + ex + "\n");
+          return null;
+      }
+  }
+
+  strBundle = strBundleService.createBundle(path);
+  if (!strBundle) {
+        dump("\n--** strBundle createInstance failed **--\n");
+  }
+  return strBundle;
+}
+
+
 var passwordExporter = {
     version: '1.1', // Incrementing requires new license acceptance
     bundle: null,

--- old/chrome/content/pwdex-loginmanager.js	2023-07-01 01:37:45.479631300 +0300
+++ new/chrome/content/pwdex-loginmanager.js	2023-07-01 02:17:37.470878100 +0300
@@ -57,7 +57,8 @@
             if (passwordExporter.accepted == true) {
                 var fp = Components.classes["@mozilla.org/filepicker;1"].createInstance(Components.interfaces.nsIFilePicker);
                 var stream = Components.classes["@mozilla.org/network/file-output-stream;1"].createInstance(Components.interfaces.nsIFileOutputStream);
-                
+                var converterOutputStream = Components.classes["@mozilla.org/intl/converter-output-stream;1"].createInstance(Components.interfaces.nsIConverterOutputStream);
+               
                 // Prompt user to select where to save the export
                 fp.init(window, passwordExporter.bundle.GetStringFromName('passwordexporter.filepicker-title'), fp.modeSave);
                 fp.defaultString = 'password-export-' + passwordExporter.getDateString();
@@ -75,6 +76,7 @@
                 
                 fp.file.create(fp.file.NORMAL_FILE_TYPE, 0666);
                 stream.init(fp.file, 0x02, 0x200, null);
+                converterOutputStream.init(stream, "UTF-8", 0, 0x0000); 
                 
                 // Whether to encrypt the passwords
                 var encrypt = document.getElementById('pwdex-encrypt').checked;
@@ -85,7 +87,10 @@
                 else if (fp.filterIndex == 1)
                     var content = this.export('csv', encrypt);
                 
-                stream.write(content, content.length);
+                //stream.write(content, content.length);
+                //stream.close();
+                converterOutputStream.writeString(content);
+                converterOutputStream.close();
                 stream.close();
                 
                 passwordExporter.debug('Export of ' + this.count + ' entries completed with ' + this.errorCount + ' errors.');

--- old/install.rdf	2023-07-01 01:37:45.538597900 +0300
+++ new/install.rdf	2023-07-01 02:27:06.042726600 +0300
@@ -5,10 +5,10 @@
 
     <Description about="urn:mozilla:install-manifest">
         <em:id>{B17C1C5A-04B1-11DB-9804-B622A1EF5492}</em:id>
-        <em:version>1.3.1</em:version>
+        <em:version>1.3.1a</em:version>
         <em:type>2</em:type>
         <em:bootstrap>true</em:bootstrap>
-        <em:name>Password Exporter</em:name>
+        <em:name>Password Exporter (non-creator mod.)</em:name>
         <em:creator>Justin Scott</em:creator>
 
         <!-- Chrome URLs -->
@@ -68,5 +68,15 @@
                 <em:maxVersion>40.*</em:maxVersion>
             </Description>
         </em:targetApplication>
+
+	<!-- SeaMonkey -->
+	<em:targetApplication>
+	  <Description>
+	    <em:id>{92650c4d-4b8e-4d2a-b7eb-24ecf4f6b63a}</em:id>
+	    <em:minVersion>2.0</em:minVersion>
+	    <em:maxVersion>2.*</em:maxVersion>
+	  </Description>
+	</em:targetApplication>
+
     </Description>
 </RDF>
